plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
repositories {
    maven { name = 'tterrag maven'; url = 'https://maven.tterrag.com/' }
    maven { name = "Jared's maven"; url = "https://maven.blamejared.com/" }
    maven { url = "https://cursemaven.com" }
}
version = mod_version
group = mod_group_id
base { archivesName = mod_id }
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods { "${mod_id}" { source sourceSets.main } }
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            jvmArg '-Xcheck:jni'
        }
        client { property 'forge.enabledGameTestNamespaces', mod_id }
        server { property 'forge.enabledGameTestNamespaces', mod_id; args '--nogui' }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
}
tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description, gtceu_version: gtceu_version
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) { expand replaceProperties + [project: project] }
}
tasks.named('jar', Jar).configure { finalizedBy 'reobfJar' }
tasks.withType(JavaCompile).configureEach { options.encoding = 'UTF-8' }
